import { Participant, ParticipantResult, RoundRobinMode, StageSettings, StageType, Status } from 'brackets-model';
import { ConvertResult, Mapping, toornament } from './types';
/**
 * Converts a Toornament stage type.
 *
 * @param type Type of the stage.
 */
export declare function convertStageType(type: toornament.StageType): StageType;
/**
 * Converts Toornament stage settings.
 *
 * @param settings Settings of the stage.
 */
export declare function convertStageSettings(settings: toornament.StageSettings): StageSettings;
/**
 * Converts a Toornament round-robin mode.
 *
 * @param method Pairing method.
 */
export declare function convertRoundRobinMode(method: toornament.PairingMethod): RoundRobinMode | undefined;
/**
 * Converts a Toornament match status.
 *
 * @param status Status of the match.
 */
export declare function convertMatchStatus(status: toornament.Status): Status;
/**
 * Converts a Toornament participant.
 *
 * @param id ID of the participant.
 * @param participant Toornament participant.
 */
export declare function convertParticipant(id: number, participant: toornament.Participant): Participant;
/**
 * Converts a Toornament participant result.
 *
 * @param id ID of the participant.
 * @param source Source of the participant.
 * @param result Result of the participant.
 */
export declare function convertParticipantResult(id: number | null, source: number | undefined, result: toornament.Opponent): ParticipantResult;
/**
 * Creates an ID factory, which returns the existing ID or a new incremental ID corresponding to a Toornament ID.
 */
export declare function idFactory(): {
    (id: string): number;
    getMapping: () => Mapping;
};
/**
 * Converts Toornament data to brackets-viewer data.
 *
 * @param data Data coming from Toornament put in a single object.
 * @param data.tournament_id ID of the tournament.
 * @param data.stages List of stages.
 * @param data.matches List of matches.
 */
export declare function convertData(data: {
    tournament_id: number;
    stages: toornament.Stage[];
    matches: toornament.Match[];
}): ConvertResult;
//# sourceMappingURL=convert.d.ts.map